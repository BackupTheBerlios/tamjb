
TODO
 - Standalone operation:

   File browse dialogs

   Test database for existance. Ask/create if does not exist.

   Make client mode a command-line option

   Error reporting (eek!)

 - Fix memory leak
  Leakage is greatly reduced with the use of postgresql and the 
  latest changes to Mp3Sharp. However, the program still leaks slowly.
  This seems to be related to System.Remoting.

 - Move all engine state into the database, and convert remoting 
  interfaces to use one-shot objects.

 - Save the current logged in user in the database (should remember who was
  the last user. Really.

 - Implement delete/copy user/mood

 - Drop songs from future part of playlist if they are flagged as suck or
   something.

 - Add support for mono mp3 files

 - Calculate average song volume and store for later level adjustment

 - Create ebuilds for esd-sharp and mp3sharp, eliminating the need for 
  wrapper makefiles, etc.

 - If a file does not have a ID3v2 tag, it will not be played. This is
  NOT a bug. But, there should be a flag in the database so that when an 
  untagged file is found, it will be added with a provisional tag 
  (truncated filename?) and rescanned periodically.


DONE
  Allow the program to run standalone, not as a client server program, 
  for the simple case where one person is listening.

  A branch of Mp3Sharp is now located (temporarily) in the tamjb cvs
  repository.

  Mono files no longer play back at double speed, but now they play back
  only in the left channel. I _guess_ this is an improvement!

  Memory leakage greatly reduced.

  Changed the default suck/mood values back to 20%/80%

  Add user controls for the compression and limiting. Settings are stored
  in the database so you don't have to reset them on every reboot.

  Cut CPU usage by more than half, by rewriting Mp3Sharp's buffering.

 - Sat Jul 17 15:39:12 EDT 2004

  Added suck/mood percent display in track list.

  You can now modify the attributes of a song that is not playing by
  selecting it in the list

  New, improved controls layout.

  Compression and soft limiting to even out that listening experience.
  (May not be suitable for music with long, quiet passages: ie 
  classical. Your mileage may vary.)

  PostgreSQL support. SQLite seems to lock the filesystem or something,
  causing dropouts. Postgres seems better about this.

  Added per-user and per-mood song attributes. (Log in: how do you feel?)

  Interface / database redesign to accomodate users and moods instead
  of track attributes.

 - Thu Jul  8 17:55:50 EDT 2004
 
  Added Unsynchronization support to the id3 tag reader

  Added strong-signing for all assemblies, including third-party assemblies

  Rearranged the project

  Added id3 tag reader, removed dependency on unknown-license id3 tag reader

 - Wed Jul  7 19:29:49 EDT 2004

 - snapshot-2004-05-14

  Updated the patch for mp3sharp to fix that infinite loop problem.

  Reversed the name so the year comes first. This makes more sense, right?

 - snapshot-12-05-2004

  Initial release.
