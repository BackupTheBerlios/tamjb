diff -r -N -b -U3 mp3sharp/mp3sharp/Makefile ../mp3sharp/mp3sharp/Makefile
--- mp3sharp/mp3sharp/Makefile	1969-12-31 19:00:00.000000000 -0500
+++ ../mp3sharp/mp3sharp/Makefile	2004-05-12 15:52:59.887761216 -0400
@@ -0,0 +1,57 @@
+# $Id$
+# A simple unix makefile for mp3sharp. Whee.
+
+# Should the engine throw an exception when it loses sync?
+#   -define:THROW_ON_SYNC_LOSS
+
+DEBUGFLAGS = -g -define:DEBUG -define:THROW_ON_SYNC_LOSS
+
+# Note: LayerIIDecoder.cs won't compile with mcs 0.29.99
+
+SOURCES= Mp3Stream.cs\
+ converter/RiffFile.cs\
+ converter/WaveFile.cs\
+ converter/WaveFileObuffer.cs\
+ decoder/BackStream.cs\
+ decoder/BitReserve.cs\
+ decoder/Bitstream.cs\
+ decoder/BitstreamErrors.cs\
+ decoder/BitstreamException.cs\
+ decoder/Control.cs\
+ decoder/Crc16.cs\
+ decoder/Decoder.cs\
+ decoder/DecoderErrors.cs\
+ decoder/DecoderException.cs\
+ decoder/Equalizer.cs\
+ decoder/FrameDecoder.cs\
+ decoder/Header.cs\
+ decoder/huffcodetab.cs\
+ decoder/InputStreamSource.cs\
+ decoder/JavaLayerError.cs\
+ decoder/JavaLayerErrors.cs\
+ decoder/JavaLayerException.cs\
+ decoder/JavaLayerHook.cs\
+ decoder/JavaLayerUtils.cs\
+ decoder/LayerIDecoder.cs\
+ decoder/LayerIIDecoder.cs\
+ decoder/LayerIIIDecoder.cs\
+ decoder/Manager.cs\
+ decoder/Obuffer.cs\
+ decoder/OutputChannels.cs\
+ decoder/SampleBuffer.cs\
+ decoder/Source.cs\
+ decoder/SynthesisFilter.cs\
+ Support/AssemblyInfo.cs\
+ Support/SupportClass.cs
+
+REFERENCES = -r System \
+        -r System.Data \
+        -r System.Management
+
+TARGET = Mp3Sharp.dll
+
+all: $(TARGET)
+
+$(TARGET): $(SOURCES)
+	mcs $(DEBUGFLAGS) $(REFERENCES) -target:library -out:$@ $(SOURCES) 
+
Files mp3sharp/mp3sharp/Mp3Sharp.dll and ../mp3sharp/mp3sharp/Mp3Sharp.dll differ
diff -r -N -b -U3 mp3sharp/mp3sharp/decoder/Bitstream.cs ../mp3sharp/mp3sharp/decoder/Bitstream.cs
--- mp3sharp/mp3sharp/decoder/Bitstream.cs	2004-02-24 09:16:32.000000000 -0500
+++ ../mp3sharp/mp3sharp/decoder/Bitstream.cs	2004-05-12 15:46:46.662500080 -0400
@@ -306,6 +306,13 @@
 			
 			headerstring = ((syncbuf[0] << 16) & 0x00FF0000) | ((syncbuf[1] << 8) & 0x0000FF00) | ((syncbuf[2] << 0) & 0x000000FF);
 			
+
+#if THROW_ON_SYNC_LOSS
+                        // t/DD: If we don't resync in a reasonable amount of time, 
+                        //       throw an exception
+                        int bytesSkipped = 0;
+#endif
+
 			do 
 			{
 				headerstring <<= 8;
@@ -318,6 +325,19 @@
 				headerstring |= (syncbuf[3] & 0x000000FF);
 				
 				sync = isSyncMark(headerstring, syncmode, syncword);
+
+#if THROW_ON_SYNC_LOSS
+                                // If we haven't resynced within a frame (or so) give up and
+                                // throw an exception. (Could try harder?)
+                                ++ bytesSkipped;
+                                if (bytesSkipped > 512)
+                                {
+                                    Console.WriteLine( "LOST SYNC FOREVER: GIVING UP" );
+                                    throw newBitstreamException(javazoom.jl.decoder.BitstreamErrors_Fields.STREAM_ERROR, 
+                                                                null);
+                                }
+#endif
+
 			}
 			while (!sync);
 			
